{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useFieldState","initialValue","useState","value","setValue","onChange","useCallback","e","target","useAutocompleteState","_e","newValue","TextField","props","fullWidth","style","marginBottom","variant","Button","color","App","start","next","prevValue","prev","useStepper","currentStep","setCurrentStep","moveType","movePower","moveTime","pp","duration","range","description","atHigherLevels","damage","default","onFive","onTen","onSeventeen","savingThrowStat","result","requiresSavingThrow","checked","setChecked","useCheckboxState","moveTypeOptions","useMemo","movePowerOptions","disableEqualMovePowers","comparationValue","option","className","display","justifyContent","alignItems","height","margin","padding","border","Paper","elevation","width","Grid","container","spacing","item","xs","Stepper","activeStep","alternativeLabel","Step","StepLabel","Autocomplete","options","disableClearable","renderInput","params","label","getOptionDisabled","undefined","disabled","type","multiline","rows","FormControlLabel","control","Checkbox","RadioGroup","row","labelPlacement","Radio","onClick","resultText","console","log","formatDescription","replace","split","map","test","trim","join","modByStat","stat","None","DEX","STR","CON","INT","WIS","CHA","statChoice","Object","values","some","field","window","confirm","formatSet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.940020a6.chunk.js","sourcesContent":["// Type: Fire\n// Move Power: STR/DEX\n// V - Move Time: 1 action\n// V - PP: 15\n// V - Duration: Instantaneous\n// V - Range: 60ft\n\n// V - You hurl a ball of flame at a target within range.\n// V - Make a ranged attack, doing 1d6 + Move fire damage on a successful hit. If the natural attack roll is {19} or {20}, the target is burnt.\n\n// V - Higher Levels: The damage dice roll for this move changes to 1d12 at level 5, 2d8 at level 10, and 4d6 at level 17.\n\n// Attack Roll: {!(1d20) + (StrMod > DexMod ? StrMod : DexMod) + Prof}\n// Damage Roll: !!(1d6 + {StrMod > DexMod ? StrMod : DexMod})\n// Damage Roll Lv.5: !!(1d12 + {StrMod > DexMod ? StrMod : DexMod})\n// Damage Roll Lv.10: !!(2d8 + {StrMod > DexMod ? StrMod : DexMod})\n// Damage Roll Lv.17: !!(4d6 + {StrMod > DexMod ? StrMod : DexMod})\n\n// Fire type Pokémons can add their STAB to the damage: +{Stab}\n\nimport React, { useState, useMemo, useCallback } from \"react\";\n\nimport {\n  Button as MuiButton,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Step,\n  StepLabel,\n  Stepper,\n  TextField as MuiTextField,\n  RadioGroup,\n  Radio,\n} from \"@material-ui/core\";\n\nimport { Autocomplete } from \"@material-ui/lab\";\n\nimport { replace, test, trim } from \"ramda\";\n\nconst useFieldState = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n  const onChange = useCallback((e) => setValue(e.target.value), [setValue]);\n  return { value, onChange };\n};\n\nconst useCheckboxState = (initialValue) => {\n  const [checked, setChecked] = useState(initialValue);\n  const onChange = useCallback((e) => setChecked(e.target.checked), [\n    setChecked,\n  ]);\n  return { checked, onChange };\n};\n\nconst useAutocompleteState = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n  const onChange = useCallback((_e, newValue) => setValue(newValue), [\n    setValue,\n  ]);\n  return { value, onChange };\n};\n\nconst useStepper = (start) => {\n  const [value, setValue] = useState(0);\n  const next = () => setValue((prevValue) => prevValue + 1);\n  const prev = () => setValue((prevValue) => prevValue - 1);\n  return { value, next, prev, setValue };\n};\n\nconst TextField = (props) => (\n  <MuiTextField\n    fullWidth\n    style={{ marginBottom: \"20px\" }}\n    variant=\"outlined\"\n    {...props}\n  />\n);\nconst Button = (props) => (\n  <MuiButton\n    style={{ marginBottom: \"20px\" }}\n    variant=\"contained\"\n    color=\"primary\"\n    {...props}\n  />\n);\n\nfunction App() {\n  const {\n    value: currentStep,\n    next,\n    prev,\n    setValue: setCurrentStep,\n  } = useStepper(0);\n\n  const moveType = useAutocompleteState(\"Typeless\");\n  const movePower = [\n    useAutocompleteState(\"None\"),\n    useAutocompleteState(\"None\"),\n  ];\n\n  const moveTime = useFieldState(\"\");\n  const pp = useFieldState(\"\");\n  const duration = useFieldState(\"\");\n  const range = useFieldState(\"\");\n  const description = useFieldState(\"\");\n  const atHigherLevels = useFieldState(\"\");\n  const damage = {\n    default: useFieldState(\"\"),\n    onFive: useFieldState(\"\"),\n    onTen: useFieldState(\"\"),\n    onSeventeen: useFieldState(\"\"),\n  };\n  const savingThrowStat = useFieldState(\"STR\");\n  const result = useFieldState(\"\");\n\n  const requiresSavingThrow = useCheckboxState(false);\n\n  const moveTypeOptions = useMemo(\n    () => [\n      \"Typeless\",\n      \"Bug\",\n      \"Dark\",\n      \"Dragon\",\n      \"Electric\",\n      \"Fairy\",\n      \"Fighting\",\n      \"Fire\",\n      \"Flying\",\n      \"Ghost\",\n      \"Grass\",\n      \"Ground\",\n      \"Ice\",\n      \"Normal\",\n      \"Poison\",\n      \"Psychic\",\n      \"Rock\",\n      \"Steel\",\n      \"Water\",\n    ],\n    []\n  );\n\n  const movePowerOptions = useMemo(\n    () => [\"None\", \"STR\", \"DEX\", \"CON\", \"INT\", \"WIS\", \"CHA\"],\n    []\n  );\n\n  const disableEqualMovePowers = useCallback(\n    (comparationValue) => (option) =>\n      option === comparationValue && comparationValue !== \"None\",\n    []\n  );\n\n  const reset = () => {\n    if (\n      window.confirm(\n        \"Creating another macro will erase the current one, do you want to proceed?\"\n      )\n    ) {\n      const formatSet = (value) => ({ target: { value } });\n\n      moveType.onChange(undefined, \"Typeless\");\n      movePower[0].onChange(undefined, \"None\");\n      movePower[1].onChange(undefined, \"None\");\n\n      moveTime.onChange(formatSet(\"\"));\n      pp.onChange(formatSet(\"\"));\n      duration.onChange(formatSet(\"\"));\n      range.onChange(formatSet(\"\"));\n      description.onChange(formatSet(\"\"));\n      atHigherLevels.onChange(formatSet(\"\"));\n      damage.default.onChange(formatSet(\"\"));\n      damage.onFive.onChange(formatSet(\"\"));\n      damage.onTen.onChange(formatSet(\"\"));\n      damage.onSeventeen.onChange(formatSet(\"\"));\n      savingThrowStat.onChange(formatSet(\"STR\"));\n      result.onChange(formatSet(\"\"));\n\n      requiresSavingThrow.onChange({ target: { checked: false } });\n\n      setCurrentStep(0);\n    }\n  };\n\n  const renderResult = () => {\n    let resultText = \"\";\n\n    console.log(description);\n    console.log(atHigherLevels);\n\n    const formatDescription = (description) =>\n      replace(/\\r?\\n|\\r/g, \" \", description)\n        .split(\" \")\n        .map((value) =>\n          test(/^-?\\d+\\.?\\d*$/, trim(value)) ? `{${trim(value)}}` : trim(value)\n        )\n        .join(\" \");\n\n    const modByStat = (stat) =>\n      ({\n        None: \"None\",\n        DEX: \"DexMod\",\n        STR: \"StrMod\",\n        CON: \"ConMod\",\n        INT: \"IntMod\",\n        WIS: \"WisMod\",\n        CHA: \"ChaMod\",\n      }[stat]);\n\n    const statChoice =\n      movePower[0].value === \"None\"\n        ? \"0\"\n        : movePower[1].value === \"None\"\n        ? modByStat(movePower[0].value)\n        : `${modByStat(movePower[0].value)} > ${modByStat(\n            movePower[1].value\n          )} ? ${modByStat(movePower[0].value)} : ${modByStat(\n            movePower[1].value\n          )}`;\n\n    resultText += `Type: ${moveType.value}\\n`;\n    resultText += `Move Power: ${\n      movePower[0].value +\n      (movePower[1].value === \"None\" ? \"\" : \"/\" + movePower[1].value)\n    }\\n`;\n    resultText +=\n      trim(moveTime.value) === \"\" ? \"\" : `Move Time: ${moveTime.value}\\n`;\n    resultText += `PP: ${trim(pp.value) === \"\" ? \"Unlimited\" : pp.value}\\n`;\n    resultText +=\n      trim(moveTime.value) === \"\" ? \"\" : `Duration: ${duration.value}\\n`;\n    resultText += trim(moveTime.value) === \"\" ? \"\" : `Range: ${range.value}\\n`;\n\n    resultText += \"\\n\";\n\n    resultText += formatDescription(description.value);\n\n    resultText += \"\\n\\n\";\n\n    resultText +=\n      atHigherLevels.value !== \"\"\n        ? formatDescription(atHigherLevels.value)\n        : \"\";\n\n    resultText += atHigherLevels.value !== \"\" ? \"\\n\\n\" : \"\";\n\n    resultText += Object.values(damage).some(\n      (field) => trim(field.value) === \"\"\n    )\n      ? \"\"\n      : `Attack Roll: {!(1d20) + (${statChoice}) + Prof}\\n`;\n    resultText += Object.values(damage).some(\n      (field) => trim(field.value) === \"\"\n    )\n      ? \"\"\n      : `Adv./Dis. Attack Roll: !!(1d20 + {${statChoice}} + {Prof})\\n`;\n\n    resultText += \"\\n\";\n\n    resultText +=\n      trim(damage.default.value) === \"\"\n        ? \"\"\n        : `Damage Roll: !!(${trim(damage.default.value)} + {${statChoice}})\\n`;\n    resultText +=\n      trim(damage.default.value) === \"\"\n        ? \"\"\n        : `Critical Damage Roll: !!(${trim(damage.default.value)})\\n`;\n\n    resultText += \"\\n\";\n\n    resultText +=\n      trim(damage.onFive.value) === \"\"\n        ? \"\"\n        : `Damage Roll Lv.5: !!(${trim(\n            damage.onFive.value\n          )} + {${statChoice}})\\n`;\n    resultText +=\n      trim(damage.onFive.value) === \"\"\n        ? \"\"\n        : `Critical Damage Roll Lv.5: !!(${trim(damage.onFive.value)})\\n`;\n\n    resultText += \"\\n\";\n\n    resultText +=\n      trim(damage.onTen.value) === \"\"\n        ? \"\"\n        : `Damage Roll Lv.10: !!(${trim(\n            damage.onTen.value\n          )} + {${statChoice}})\\n`;\n    resultText +=\n      trim(damage.onTen.value) === \"\"\n        ? \"\"\n        : `Critical Damage Roll Lv.10: !!(${trim(damage.onTen.value)})\\n`;\n\n    resultText += \"\\n\";\n\n    resultText +=\n      trim(damage.onSeventeen.value) === \"\"\n        ? \"\"\n        : `Damage Roll Lv.17: !!(${trim(\n            damage.onSeventeen.value\n          )} + {${statChoice}})\\n`;\n    resultText +=\n      trim(damage.onSeventeen.value) === \"\"\n        ? \"\"\n        : `Critical Damage Roll Lv.17: !!(${trim(damage.onSeventeen.value)})`;\n\n    resultText += requiresSavingThrow.checked ? \"\\n\\n\" : \"\";\n\n    resultText += requiresSavingThrow.checked\n      ? `${savingThrowStat.value} Saving Throw DC: {8 + Prof + (${statChoice})}`\n      : \"\";\n\n    resultText += moveType.value === \"Typeless\" ? \"\" : \"\\n\\n\";\n\n    resultText +=\n      moveType.value === \"Typeless\"\n        ? \"\"\n        : `${moveType.value} type Pokémons can add their STAB to the damage: {Stab}`;\n\n    result.onChange({ target: { value: resultText } });\n    next();\n  };\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        margin: \"0\",\n        padding: \"0\",\n        border: \"0\",\n      }}\n    >\n      <Paper\n        elevation={3}\n        style={{ width: \"min(680px, 50vw)\", padding: \"15px 35px\" }}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Stepper activeStep={currentStep} alternativeLabel>\n              <Step>\n                <StepLabel>Basic Info</StepLabel>\n              </Step>\n\n              <Step>\n                <StepLabel>Description</StepLabel>\n              </Step>\n\n              <Step>\n                <StepLabel>Damage and DC</StepLabel>\n              </Step>\n\n              <Step>\n                <StepLabel>Result</StepLabel>\n              </Step>\n            </Stepper>\n          </Grid>\n\n          {currentStep === 0 && (\n            <>\n              <Grid item xs={12}>\n                <Autocomplete\n                  {...moveType}\n                  options={moveTypeOptions}\n                  disableClearable\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Type\" variant=\"outlined\" />\n                  )}\n                />\n              </Grid>\n\n              <Grid\n                item\n                xs={movePower[0].value === movePowerOptions[0] ? 12 : 6}\n              >\n                <Autocomplete\n                  {...movePower[0]}\n                  options={movePowerOptions}\n                  disableClearable\n                  getOptionDisabled={disableEqualMovePowers(movePower[1].value)}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Move Power\"\n                      variant=\"outlined\"\n                    />\n                  )}\n                />\n              </Grid>\n\n              {movePower[0].value === movePowerOptions[0] ? (\n                movePower[1].value !== \"None\" &&\n                movePower[1].onChange(undefined, \"None\")\n              ) : (\n                <Grid item xs={6}>\n                  <Autocomplete\n                    {...movePower[1]}\n                    disabled={movePower[0].value === movePowerOptions[0]}\n                    options={movePowerOptions}\n                    disableClearable\n                    getOptionDisabled={disableEqualMovePowers(\n                      movePower[0].value\n                    )}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Move Power\"\n                        variant=\"outlined\"\n                      />\n                    )}\n                  />\n                </Grid>\n              )}\n\n              <Grid item xs={12}>\n                <TextField label=\"Move Time\" {...moveTime} />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField type=\"number\" label=\"PP\" {...pp} />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField label=\"Duration\" {...duration} />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField label=\"Range\" {...range} />\n              </Grid>\n            </>\n          )}\n\n          {currentStep === 1 && (\n            <>\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Description\"\n                  multiline\n                  rows={8}\n                  {...description}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  label=\"At higher levels\"\n                  multiline\n                  rows={3}\n                  {...atHigherLevels}\n                />\n              </Grid>\n            </>\n          )}\n\n          {currentStep === 2 && (\n            <>\n              <Grid item xs={12}>\n                <TextField label=\"Damage\" {...damage.default} />\n              </Grid>\n\n              <Grid item xs={4}>\n                <TextField label=\"Damage (Lv.5)\" {...damage.onFive} />\n              </Grid>\n\n              <Grid item xs={4}>\n                <TextField label=\"Damage (Lv.10)\" {...damage.onTen} />\n              </Grid>\n\n              <Grid item xs={4}>\n                <TextField label=\"Damage (Lv.17)\" {...damage.onSeventeen} />\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <FormControlLabel\n                  control={\n                    <Checkbox {...requiresSavingThrow} color=\"primary\" />\n                  }\n                  label=\"Requires Saving Throw?\"\n                />\n              </Grid>\n\n              {requiresSavingThrow.checked && (\n                <Grid item xs={12}>\n                  <RadioGroup\n                    {...savingThrowStat}\n                    row\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\n                  >\n                    <FormControlLabel\n                      labelPlacement=\"bottom\"\n                      value=\"STR\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"STR\"\n                    />\n                    <FormControlLabel\n                      labelPlacement=\"bottom\"\n                      value=\"CON\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"CON\"\n                    />\n                    <FormControlLabel\n                      labelPlacement=\"bottom\"\n                      value=\"DEX\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"DEX\"\n                    />\n                    <FormControlLabel\n                      labelPlacement=\"bottom\"\n                      value=\"INT\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"INT\"\n                    />\n                    <FormControlLabel\n                      labelPlacement=\"bottom\"\n                      value=\"WIS\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"WIS\"\n                    />\n                    <FormControlLabel\n                      labelPlacement=\"bottom\"\n                      value=\"CHA\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"CHA\"\n                    />\n                  </RadioGroup>\n                </Grid>\n              )}\n            </>\n          )}\n\n          {currentStep === 3 && (\n            <>\n              <Grid item xs={12}>\n                <TextField label=\"Result\" multiline rows={12} {...result} />\n              </Grid>\n            </>\n          )}\n\n          <Grid\n            item\n            xs={12}\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            {currentStep > 0 && currentStep < 3 && (\n              <Button onClick={prev}>Back</Button>\n            )}\n            {currentStep < 2 && <Button onClick={next}>Next</Button>}\n            {currentStep === 2 && (\n              <Button onClick={renderResult}>Finish</Button>\n            )}\n            {currentStep === 3 && (\n              <Button onClick={reset}>Create Another</Button>\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}