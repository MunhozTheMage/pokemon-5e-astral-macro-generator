{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useFieldState","initialValue","useState","value","setValue","onChange","useCallback","e","target","useAutocompleteState","_e","newValue","TextField","props","fullWidth","style","marginBottom","variant","Button","color","App","start","next","prevValue","prev","useStepper","currentStep","setCurrentStep","moveType","movePower","moveTime","pp","duration","range","description","atHigherLevels","damage","default","onFive","onTen","onSeventeen","savingThrowStat","result","requiresSavingThrow","checked","setChecked","useCheckboxState","moveTypeOptions","useMemo","movePowerOptions","disableEqualMovePowers","comparationValue","option","className","display","justifyContent","alignItems","height","margin","padding","border","Paper","elevation","width","Grid","container","spacing","item","xs","Stepper","activeStep","alternativeLabel","Step","StepLabel","Autocomplete","options","renderInput","params","label","getOptionDisabled","undefined","disabled","type","multiline","rows","FormControlLabel","control","Checkbox","RadioGroup","row","labelPlacement","Radio","onClick","resultText","console","log","formatDescription","replace","split","map","test","trim","join","modByStat","stat","None","DEX","STR","CON","INT","WIS","CHA","statChoice","Object","values","some","field","window","confirm","formatSet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f271ae6e.chunk.js","sourcesContent":["// Type: Fire\n// Move Power: STR/DEX\n// V - Move Time: 1 action\n// V - PP: 15\n// V - Duration: Instantaneous\n// V - Range: 60ft\n\n// V - You hurl a ball of flame at a target within range. \n// V - Make a ranged attack, doing 1d6 + Move fire damage on a successful hit. If the natural attack roll is {19} or {20}, the target is burnt.\n\n// V - Higher Levels: The damage dice roll for this move changes to 1d12 at level 5, 2d8 at level 10, and 4d6 at level 17.\n\n// Attack Roll: {!(1d20) + (StrMod > DexMod ? StrMod : DexMod) + Prof}\n// Damage Roll: !!(1d6 + {StrMod > DexMod ? StrMod : DexMod})\n// Damage Roll Lv.5: !!(1d12 + {StrMod > DexMod ? StrMod : DexMod})\n// Damage Roll Lv.10: !!(2d8 + {StrMod > DexMod ? StrMod : DexMod})\n// Damage Roll Lv.17: !!(4d6 + {StrMod > DexMod ? StrMod : DexMod})\n\n// Fire type Pokémons can add their STAB to the damage: +{Stab}\n\nimport React, { useState, useMemo, useCallback } from \"react\";\n\nimport {\n  Button as MuiButton,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Step,\n  StepLabel,\n  Stepper,\n  TextField as MuiTextField,\n  RadioGroup,\n  Radio\n} from \"@material-ui/core\";\n\nimport {\n  Autocomplete,\n} from \"@material-ui/lab\";\n\nimport {\n  replace,\n  test,\n  trim,\n} from \"ramda\";\n\nconst useFieldState = initialValue => {\n  const [value, setValue] = useState(initialValue);\n  const onChange = useCallback((e) => setValue(e.target.value), [setValue]);\n  return {value, onChange};\n}\n\nconst useCheckboxState = initialValue => {\n  const [checked, setChecked] = useState(initialValue);\n  const onChange = useCallback((e) => setChecked(e.target.checked), [setChecked]);\n  return {checked, onChange};\n}\n\nconst useAutocompleteState = initialValue => {\n  const [value, setValue] = useState(initialValue);\n  const onChange = useCallback((_e, newValue) => setValue(newValue), [setValue]);\n  return {value, onChange};\n}\n\nconst useStepper = start => {\n  const [value, setValue] = useState(0);\n  const next = () => setValue((prevValue) => prevValue + 1);\n  const prev = () => setValue((prevValue) => prevValue - 1);\n  return { value, next, prev, setValue }\n}\n\nconst TextField = props => <MuiTextField fullWidth style={{ marginBottom: \"20px\" }} variant=\"outlined\" {...props}/>\nconst Button = props => <MuiButton style={{ marginBottom: \"20px\" }} variant=\"contained\" color=\"primary\" {...props}/>\n\nfunction App() {\n  const { value: currentStep, next, prev, setValue: setCurrentStep } = useStepper(0);\n\n  const moveType = useAutocompleteState(\"Typeless\");\n  const movePower = [useAutocompleteState(\"None\"), useAutocompleteState(\"None\")];\n\n  const moveTime = useFieldState(\"\");\n  const pp = useFieldState(\"\");\n  const duration = useFieldState(\"\");\n  const range = useFieldState(\"\");\n  const description = useFieldState(\"\");\n  const atHigherLevels = useFieldState(\"\");\n  const damage = {\n    default: useFieldState(\"\"),\n    onFive: useFieldState(\"\"),\n    onTen: useFieldState(\"\"),\n    onSeventeen: useFieldState(\"\") \n  };\n  const savingThrowStat = useFieldState(\"STR\");\n  const result = useFieldState(\"\");\n\n  const requiresSavingThrow = useCheckboxState(false);\n\n  const moveTypeOptions = useMemo(() => ([\n    \"Typeless\",\n    \"Bug\",\n    \"Dark\",\n    \"Dragon\",\n    \"Electric\",\n    \"Fairy\",\n    \"Fighting\",\n    \"Fire\",\n    \"Flying\",\n    \"Ghost\",\n    \"Grass\",\n    \"Ground\",\n    \"Ice\",\n    \"Normal\",\n    \"Poison\",\n    \"Psychic\",\n    \"Rock\",\n    \"Steel\",\n    \"Water\"\n  ]), []);\n\n  const movePowerOptions = useMemo(() => ([\n    \"None\",\n    \"STR\",\n    \"DEX\",\n    \"CON\",\n    \"INT\",\n    \"WIS\",\n    \"CHA\"\n  ]), []);\n\n  const disableEqualMovePowers = useCallback(\n    comparationValue => option => option === comparationValue && comparationValue !== \"None\", \n  []);\n\n  const reset = () => {\n    if(window.confirm(\"Creating another macro will erase the current one, do you want to proceed?\")) {\n      const formatSet = value => ({ target: { value } });\n\n      moveType.onChange(undefined, \"Typeless\");\n      movePower[0].onChange(undefined, \"None\");\n      movePower[1].onChange(undefined, \"None\");\n\n      moveTime.onChange(formatSet(\"\"));\n      pp.onChange(formatSet(\"\"));\n      duration.onChange(formatSet(\"\"));\n      range.onChange(formatSet(\"\"));\n      description.onChange(formatSet(\"\"));\n      atHigherLevels.onChange(formatSet(\"\"));\n      damage.default.onChange(formatSet(\"\"));\n      damage.onFive.onChange(formatSet(\"\"));\n      damage.onTen.onChange(formatSet(\"\"));\n      damage.onSeventeen.onChange(formatSet(\"\"));\n      savingThrowStat.onChange(formatSet(\"STR\"));\n      result.onChange(formatSet(\"\"));\n\n      requiresSavingThrow.onChange({ target: { checked: false } });\n      \n      setCurrentStep(0);\n    }\n  }\n\n  const renderResult = () => {\n    let resultText = \"\";\n\n    console.log(description)\n    console.log(atHigherLevels)\n\n    const formatDescription = description => \n      replace(/\\r?\\n|\\r/g, \" \", description)\n      .split(\" \")\n      .map(value => test(/^\\d+$/, trim(value)) ? `{${trim(value)}}` : trim(value))\n      .join(\" \");\n\n    const modByStat = stat => ({\n      None: \"None\",\n      DEX: \"DexMod\",\n      STR: \"StrMod\",\n      CON: \"ConMod\",\n      INT: \"IntMod\",\n      WIS: \"WisMod\",\n      CHA: \"ChaMod\",\n    })[stat];\n\n    const statChoice = \n    movePower[0].value === \"None\" ? \n    \"0\" : \n    movePower[1].value === \"None\" ? \n    modByStat(movePower[0].value) :\n    `${modByStat(movePower[0].value)} > ${modByStat(movePower[1].value)} ? ${modByStat(movePower[0].value)} : ${modByStat(movePower[1].value)}`;\n\n    resultText += `Type: ${moveType.value}\\n`;\n    resultText += `Move Power: ${movePower[0].value + (movePower[1].value === \"None\" ? \"\" : \"/\" + movePower[1].value)}\\n`;\n    resultText += trim(moveTime.value) === \"\" ? \"\" : `Move Time: ${moveTime.value}\\n`;\n    resultText += `PP: ${trim(pp.value) === \"\" ? \"Unlimited\" : pp.value}\\n`;\n    resultText += trim(moveTime.value) === \"\" ? \"\" : `Duration: ${duration.value}\\n`;\n    resultText += trim(moveTime.value) === \"\" ? \"\" : `Range: ${range.value}\\n`;\n\n    resultText += \"\\n\";\n\n    resultText += formatDescription(description.value);\n\n    resultText += \"\\n\\n\";\n\n    resultText += formatDescription(atHigherLevels.value);\n\n    resultText += \"\\n\\n\";\n\n    resultText += Object.values(damage).some(field => trim(field.value) === \"\" ) ? \"\" : `Attack Roll: {!(1d20) + (${statChoice}) + Prof}\\n`;\n    resultText += Object.values(damage).some(field => trim(field.value) === \"\" ) ? \"\" : `Adv./Dis. Attack Roll: !!(1d20 + {${statChoice}} + {Prof})\\n`;\n\n    resultText += \"\\n\";\n\n    resultText += trim(damage.default.value) === \"\" ? \"\" : `Damage Roll: !!(${trim(damage.default.value)} + {${statChoice}})\\n`;\n    resultText += trim(damage.default.value) === \"\" ? \"\" : `Critical Damage Roll: !!(${trim(damage.default.value)})\\n`;\n\n    resultText += \"\\n\";\n\n    resultText += trim(damage.onFive.value) === \"\" ? \"\" : `Damage Roll Lv.5: !!(${trim(damage.onFive.value)} + {${statChoice}})\\n`;\n    resultText += trim(damage.onFive.value) === \"\" ? \"\" : `Critical Damage Roll Lv.5: !!(${trim(damage.onFive.value)})\\n`;\n\n    resultText += \"\\n\";\n\n    resultText += trim(damage.onTen.value) === \"\" ? \"\" : `Damage Roll Lv.10: !!(${trim(damage.onTen.value)} + {${statChoice}})\\n`;\n    resultText += trim(damage.onTen.value) === \"\" ? \"\" : `Critical Damage Roll Lv.10: !!(${trim(damage.onTen.value)})\\n`;\n\n    resultText += \"\\n\";\n\n    resultText += trim(damage.onSeventeen.value) === \"\" ? \"\" : `Damage Roll Lv.17: !!(${trim(damage.onSeventeen.value)} + {${statChoice}})\\n`;\n    resultText += trim(damage.onSeventeen.value) === \"\" ? \"\" : `Critical Damage Roll Lv.17: !!(${trim(damage.onSeventeen.value)})\\n`;\n\n    resultText += \"\\n\";\n\n    resultText += requiresSavingThrow.checked ? `${savingThrowStat.value} Saving Throw DC: {8 + Prof + (${statChoice})}\\n` : \"\";\n\n    resultText += \"\\n\";\n\n    resultText += moveType.value === \"Typeless\" ? \"\" : `${moveType.value} type Pokémons can add their STAB to the damage: {Stab}`\n\n    result.onChange({ target: { value: resultText } });\n    next();\n  }\n\n  return (\n    <div className=\"App\" style={{ \n      display: \"flex\", \n      justifyContent: \"center\", \n      alignItems: \"center\", \n      height: \"100vh\",\n      margin: \"0\",\n      padding: \"0\",\n      border: \"0\",\n    }}>\n      <Paper elevation={3} style={{ width: \"min(680px, 50vw)\", padding: \"15px 35px\" }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Stepper activeStep={currentStep} alternativeLabel>\n              <Step>\n                <StepLabel>Basic Info</StepLabel>\n              </Step>\n\n              <Step>\n                <StepLabel>Description</StepLabel>\n              </Step>\n\n              <Step>\n                <StepLabel>Damage and DC</StepLabel>\n              </Step>\n\n              <Step>\n                <StepLabel>Result</StepLabel>\n              </Step>\n            </Stepper>\n          </Grid>\n          \n          {currentStep === 0 &&\n          (\n            <>\n              <Grid item xs={12}>\n                <Autocomplete\n                  {...moveType}\n                  options={moveTypeOptions}\n                  renderInput={(params) => <TextField {...params} label=\"Type\" variant=\"outlined\" />}\n                />\n              </Grid>\n\n              <Grid item xs={movePower[0].value === movePowerOptions[0] ? 12 : 6}>\n                <Autocomplete\n                  {...movePower[0]}\n                  options={movePowerOptions}\n                  getOptionDisabled={disableEqualMovePowers(movePower[1].value)}\n                  renderInput={(params) => <TextField {...params} label=\"Move Power\" variant=\"outlined\" />}\n                />\n              </Grid>\n\n              {movePower[0].value === movePowerOptions[0] ?\n              movePower[1].value !== \"None\" && movePower[1].onChange(undefined, \"None\") :\n              (<Grid item xs={6}>\n                <Autocomplete\n                  {...movePower[1]}\n                  disabled={movePower[0].value === movePowerOptions[0]}\n                  options={movePowerOptions}\n                  getOptionDisabled={disableEqualMovePowers(movePower[0].value)}\n                  renderInput={(params) => <TextField {...params} label=\"Move Power\" variant=\"outlined\" />}\n                />\n              </Grid>)}\n\n              <Grid item xs={12}>\n                <TextField label=\"Move Time\" {...moveTime} />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField type=\"number\" label=\"PP\" {...pp} />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField label=\"Duration\" {...duration} />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField label=\"Range\" {...range} />\n              </Grid>\n            </>\n          )}\n\n          {currentStep === 1 &&\n          (\n            <>\n              <Grid item xs={12}>\n                <TextField \n                  label=\"Description\"\n                  multiline\n                  rows={8}\n                  {...description} \n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField \n                  label=\"At higher levels\"\n                  multiline\n                  rows={3}\n                  {...atHigherLevels} \n                />\n              </Grid>\n            </>\n          )}\n\n          {currentStep === 2 &&\n          (\n            <>\n              <Grid item xs={12}>\n                <TextField label=\"Damage\" {...damage.default} />\n              </Grid>\n\n              <Grid item xs={4}>\n                <TextField label=\"Damage (Lv.5)\" {...damage.onFive} />\n              </Grid>\n\n              <Grid item xs={4}>\n                <TextField label=\"Damage (Lv.10)\" {...damage.onTen} />\n              </Grid>\n\n              <Grid item xs={4}>\n                <TextField label=\"Damage (Lv.17)\" {...damage.onSeventeen} />\n              </Grid>\n\n              <Grid item xs={12} style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      {...requiresSavingThrow}\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Requires Saving Throw?\"\n                />\n              </Grid>\n\n              {requiresSavingThrow.checked && (\n                <Grid item xs={12}>\n                  <RadioGroup {...savingThrowStat} row style={{ display: \"flex\", justifyContent: \"center\" }}>\n                    <FormControlLabel labelPlacement=\"bottom\" value=\"STR\" control={<Radio color=\"primary\"/>} label=\"STR\" />\n                    <FormControlLabel labelPlacement=\"bottom\" value=\"CON\" control={<Radio color=\"primary\"/>} label=\"CON\" />\n                    <FormControlLabel labelPlacement=\"bottom\" value=\"DEX\" control={<Radio color=\"primary\"/>} label=\"DEX\" />\n                    <FormControlLabel labelPlacement=\"bottom\" value=\"INT\" control={<Radio color=\"primary\"/>} label=\"INT\" />\n                    <FormControlLabel labelPlacement=\"bottom\" value=\"WIS\" control={<Radio color=\"primary\"/>} label=\"WIS\" />\n                    <FormControlLabel labelPlacement=\"bottom\" value=\"CHA\" control={<Radio color=\"primary\"/>} label=\"CHA\" />\n                  </RadioGroup>\n                </Grid>\n              )}\n            </>\n          )}\n\n          {currentStep === 3 &&\n          (\n            <>\n              <Grid item xs={12}>\n                <TextField \n                  label=\"Result\"\n                  multiline\n                  rows={12}\n                  {...result} \n                />\n              </Grid>\n            </>\n          )}\n\n          <Grid item xs={12} style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            {currentStep > 0 && currentStep < 3 && (<Button onClick={prev}>Back</Button>)}\n            {currentStep < 2 && (<Button onClick={next}>Next</Button>)}\n            {currentStep === 2 && (<Button onClick={renderResult}>Finish</Button>)}\n            {currentStep === 3 && (<Button onClick={reset}>Create Another</Button>)}\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}